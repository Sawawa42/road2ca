name: 'Renovate'

on:
  schedule:
    - cron: '0 * * * *' # 毎時0分に実行
  workflow_dispatch:
    inputs:
      repoCache:
        description: 'キャッシュの動作モード'
        type: choice
        default: enabled
        options:
          - enabled # キャッシュ読み込み+キャッシュ書き出し
          - disabled # キャッシュ読み込み、書き出し共に無効化
          - reset # キャッシュ読み込みを無効化、書き出しは有効化

permissions: 
  actions: write # 既存のキャッシュを削除するために必要
  contents: read

env:
  cache_dir: /tmp/renovate/cache/renovate/repository
  cache_key: renovate-cache

jobs:
  renovate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore cache
        if: github.event.inputs.repoCache != 'disabled'
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.cache_dir }}
          key: ${{ env.cache_key }}

      - name: Try fix cache permissions
        if: ${{ steps.cache-restore.outputs.cache-hit }}
        continue-on-error: true
        run: |
          set -x
          sudo chown -R 12021:0 /tmp/renovate/
          ls -R $cache_dir
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
      - name: Run Renovate
        uses: renovatebot/github-action@v43.0.11
        with:
          token: ${{ steps.app-token.outputs.token }}
        env:
          LOG_LEVEL: debug
          RENOVATE_REPOSITORIES: '3-shake/securify-portal'
          NODE_OPTIONS: '--max-old-space-size=4096'
          RENOVATE_REPOSITORY_CACHE: ${{ github.event.inputs.repoCache || 'enabled' }}

      - name: Delete previous cache
        if: ${{ github.event.inputs.repoCache != 'disabled' && steps.cache-restore.outputs.cache-hit }}
        continue-on-error: true
        run: gh cache delete "${{ env.cache_key }}"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Save cache
        uses: actions/cache/save@v4
        if: github.event.inputs.repoCache != 'disabled'
        with:
          path: ${{ env.cache_dir }}
          key: ${{ env.cache_key }}